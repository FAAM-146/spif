
.. title:: SPIF Main
.. role:: rubric

************************************
SPIF  - Single Particle Image Format
************************************


..
  For full information on the SPIF data standard and usage examples see [paper_placeholder](https://github.com/graemenott/spif-paper).

Test of substitution: |MandatorySpifFile|

Background and Motivation
=========================

The SPIF data standard was conceived as an open and accessible means of storing individual cloud particle images. Real-time images of liquid and ice particles from aircraft are routinely generated by optical array probes (OAPs) [#Knollenberg1970]_. OAPs use a one-dimensional photodiode array to record successive slices of an image of the shadow that is cast by a particle as it moves across the instrument's sample volume. The use of such instruments has led to decades worth of in situ cloud particle-by-particle data taken across the gamut of pristine and anthropogenically-modified [#Quaas2015]_ cloud types. More recently, probes using two dimensional imagers, such as the `SPEC <http://www.specinc.com>`_ CPI (Cloud Particle Imager) [#Lawson2001]_ and HOLODEC (Holographic Detector for Clouds) [#Fugal2009]_ have been used to produce very high resolution images with greater colour depth of cloud particles.

Image data from such probes is recorded in proprietary and instrument- or system-specific formats. Binary formats have evolved due to the limitations of legacy hardware and limited system bandwidths. This means that is a significant barrier to new users of image data, particularly for users that are not from fields that have traditionally used such cloud data. Fields such as remote sensing and atmospheric process modelling may well benefit by being able to ingest raw cloud particle data into their processing streams as these applications may require specialised or different processing options to those normally used by those in the cloud measurement community.

The SPIF standard has been designed so that decoded raw binary data are stored in a `netCDF4 <https://doi.org/10.5065/D6H70CW6>`_ file structure with a standardised vocabulary in accordance with `FAIR Guiding Principles <https://www.go-fair.org/fair-principles/>`_ [#Wilkinson2016]_. It is hoped that this will improve access to this data for users from a wide range of fields and facilitate the sharing, refinement, and standardisation of data processing routines (for a discussion on inconsistencies between current particle processing routines see McFarquhar et al., 2017 [#McFarquhar2017]_
).


SPIF Files
==========


The SPIF standard
-----------------

The SPIF standard is a standardised vocabulary for storing image data and metadata in `netCDF4 <https://doi.org/10.5065/D6H70CW6>`_ files. NetCDF allows for fully self-describing, archival standard data and is supported on a variety of platforms, environments, and programming languages and commonly used in earth science communities. Conventions and best practice guides such as `Attribute Convention for Dataset Discover <https://wiki.esipfed.org/Attribute_Convention_for_Data_Discovery_1-3>`_ (ACDD) and `CF (Climate and Forecast) Conventions <https://cfconventions.org>`_ are used to standardise the netCDF4 metadata and variable structures to suit a particular field and so facilitate access, standard workflows, and comparison between datasets.

In a similar fashion to the CF Conventions; SPIF defines a minimum vocabulary, that is groups, variables, and attributes, that must be included for compliance. SPIF is referred to here as a format standard, rather than a convention, as it stipulates the form of the variable data as well as variable attributes. This is to ensure that all raw data required for processing is included in a consistent structure. SPIF has been designed to be compatible with common data conventions so is possible to create a SPIF file that is also compliant with ACDD, CF, other conventions, and any organisational requirements.

Additional data can be stored in a SPIF file along with the required vocabulary to provide ancillary data from other sources, processed data products, or instrument housekeeping data to aid in diagnostic investigations. Any such data contained within the file is optional but should not conflict with requirements of the SPIF standard.


Standard Compliance
-------------------

This `repository <https://github.com/FAAM-146/spif>`_ contains the *vocal* project for the SPIF data standard. *Vocal* is a tool for managing netCDF data product standards and associated data product specifications. It can be used to check netCDF file compliance to a standard, including SPIF. See the :doc:`SPIF project page <spif-project>` for more details.

The SPIF convention string can be added to the ``Conventions`` global attribute of a netCDF file that is compliant, that is;

.. code-block:: ncl

  Conventions: "SPIF-m.n"

where ``m`` is the major version, and ``n`` the minor version of the SPIF standard.



SPIF File Structure
-------------------

SPIF files use netCDF4 groups to divide multiple imaging instruments and to separate image data from other types of data. The group structure of a SPIF file will look like;

.. parsed-literal::
  :name: spif-structure-basic

  **root**
    │
    ├── *platform*
    │
    ├── **<imager-1>**
    │   │
    │   ├── **core**
    │   │
    │   ├── *auxillary*
    │   │
    │   ├── *level-0*
    │   │
    │   ├── *level-1*
    │   │
    │   └── *level-2*
    │
    ├── <*imager-2*>
    │   │
    │   └── ...
    │
    └── ...

Groups in bold are mandatory while those in italics are optional. The imaging instrument groups are labelled as ``<imager-1>``, ``<imager-2>``,...``<imager-n>`` where the angled braces ``< >`` indicate that the name actually used in the SPIF file will be some other string. Documentation uses ``imager`` to distinguish these groups from those containing non-imaging instrument data. The file structure and required vocabulary are described below.

The SPIF definition is constrained to ensure that standard-compliant files contain all the information/data required for future processing. SPIF files must contain, as a minimum, a mandatory vocabulary. That is; groups, attributes, and (coordinate) variables.

Details of the mandatory vocabulary are described in detail :doc:`here <|MandatorySpifFile|>`.

In addition to these mandatory netCDF parameters, a SPIF file can be extended with additional groups, attributes, and (coordinate) variables.

.. seealso::
  Recommended optional vocabulary is described in :doc:`|OptionalSpifFile|`


File root
^^^^^^^^^

There are only two required global attributes. This first of these is ``Conventions``. This must include the text ``SPIF-m.n``, where ``m.n`` are the major and minor versions. Other recognised conventions strings can also be included in a space- (recommended) or comma-separated list.


The second required global attribute is ``imager_groups``. This is used to identify groups of imaging data that conforms to the SPIF structure. It is possible to have multiple groups within the file root and these may or may not contain image data. This attribute makes it easy for users to find those groups. If there are more than one imager group then these should be given as a space- (recommended) or comma-separated list.

..
  Move this include block into a dynamically generated file. Can use string replacements to do filenames

.. include:: dynamic_content/spif_example.root.rst
  :start-after: root_AttrsStart
  :end-before: root_AttrsStop

There are many recommended global attributes, users may refer to the `ACDD <https://wiki.esipfed.org/Attribute_Convention_for_Data_Discovery_1-3>`_ which lists some commonly used attributes.


Imager group
^^^^^^^^^^^^

The image data from an appropriate instrument is contained within a special group within the SPIF file ``root``. It may make sense to include more than one instrument or an instrument with more than one channel, for example the `SPEC <http://www.specinc.com>`_ `2D-S (Stereo) Probe <http://www.specinc.com/2d-s-stereo-probe-operation>`_ which has two orthogonal OAPs, in the same file. The names of the imager groups are not prescribed but should be descriptive, for example for the 2D-S the imager group names may be ``2DS_horizonal`` and 2DS_vertical``. In this text the imager groups are written as ``<imager-1>``, ``<imager-2>``, etc where the braces indicate that it is not a literal string. The mandatory group attribute ``instrument_name`` and the recommended group attribute ``instrument_long_name`` should contain more complete instrument information.

The imager group contains variables with information about the probe size, resolution, and other data required for interpreting the raw images.

..
  Move this include block into a dynamically generated file. Can use string replacements to do filenames

.. include:: dynamic_content/spif_example.rst
    :start-after: imager_AttrsStart
    :end-before: imager_AttrsStop
..
  :imager_name: Short name of the imaging instrument. If may be the same as the group name.
  :imager_long_name: Full descriptive name of the imaging instrument.

A complete description of mandatory vocabulary of the imager group is given :ref:`here <imager group section>`.


Imager core group
^^^^^^^^^^^^^^^^^

The imager ``core`` group is a sub-group of the ``imager`` group and contains the flattened image data. All image data has been extracted from the raw binary file and presented in a more usable form. No filtering is carried out so potentially corrupt images, repeated images, and noise are all included.

The length of the 1-dimensional image array is the product of the number of images, given by the unlimited dimension ``image_num``, and the width and height of each image. Depending on the type of instrument, the width and/or height may be fixed or variable for each image. The maximum value of the coordinate variable ``image_num`` is the number of images in the dataset while the maximum value of ``pixel`` is the total number of pixels in the image array.

The arrival time of each image is given by ``timestamp`` in a recognised time, usually nanoseconds, from a reference time. ``timestamp`` has a ``units`` attribute string that conforms to the `UDUNITS recommendation <https://cfconventions.org/Data/cf-conventions/cf-conventions-1.11/cf-conventions.html#time-coordinate>`_, for example "nanoseconds since 2024-01-01 00:00:00 +0". The ``timestamp`` variable has
a ``standard_name`` attribute "time". It's worth mentioning that due to the random nature of cloud sampling, the data in ``timestamp`` will be highly irregular and different from what one may expect from timeseries data.

Note that different probes may not provide image times in exactly the same way and indeed, image arrival time may in some circumstances be difficult to precisely define. However, the ``timestamp`` variable will always give the image arrival time as accurately as possible, a description of how it was determined from the raw buffer data should be included in the ``comment`` or another variable attribute. One may decide to add a ``timestamp_flag`` as an ancillary variable using the `CF flag <https://cfconventions.org/Data/cf-conventions/cf-conventions-1.11/cf-conventions.html#flags>`_ format to quantify the reliability of each time stamp.

Mandatory imager/core group attributes are;

..
  Move this include block into a dynamically generated file. Can use string replacements to do filenames

.. include:: dynamic_content/spif_example.root.imager.core.rst
    :start-after: core_AttrsStart
    :end-before: core_AttrsStop

A complete description of mandatory vocabulary of the imager core group is given :ref:`here <core group section>`.


Image Data
----------














SPIF Extentions
---------------













.. rubric:: References

.. [#Knollenberg1970] https://doi.org/10.1175/1520-0450(1970)009<0086:TOAAAT>,2.0.CO;2), 1970.
.. [#Quaas2015] https://doi.org/10.1007/s40641-015-0028-0, 2015.
.. [#Lawson2001] Lawson et al., 2001 https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2000JD900789, 2001.
.. [#Fugal2009] https://amt.copernicus.org/articles/2/259/2009/, 2009.
.. [#Wilkinson2016] Wilkinson et al., 2016. https://www.nature.com/articles/sdata201618)
.. [#McFarquhar2017] McFarquhar et al., 2017. https://doi.org/10.1175/AMSMONOGRAPHS-D-16-0007.1
